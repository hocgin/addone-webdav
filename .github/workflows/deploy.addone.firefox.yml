name: Deploy::Addone.firefox

on:
  workflow_dispatch:
    inputs:
      use_cache:
        description: '是否使用缓存'
        required: true
        default: 'true'
      use_publish:
        description: '审核通过后是否立即发布'
        required: true
        default: 'true'
  push:
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
      - 'scripts/**'
      - '*.md'
      - '*.editorconfig'
      - '*.gitignore'

env:
  FIREFOX_APPID: ${{ secrets.FIREFOX_APPID }}
  FIREFOX_CLIENT_ID: ${{ secrets.FIREFOX_CLIENT_ID }}
  FIREFOX_CLIENT_SECRET: ${{ secrets.FIREFOX_CLIENT_SECRET }}


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3
      - id: prep
        uses: hocgin/action-env@main
      - name: Rename Version
        run: |
          sed -i "s/\"1.0.0\"/\"${VERSION}\"/" package.json
        env:
          VERSION: ${{ steps.prep.outputs.version_number }}
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      - name: Run build
        run: npm run build:prod.addone
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
          USE_LOG: false
      - name: Generate File 📃
        run: |
          addoneid=$APPID
          oldstr='"background":{"service_worker":"background.js"}'
          rootPath=$(pwd)
          filePath=$rootPath"/dist/manifest.json"
          newstr='"background":{"scripts":["background.js"]},"browser_specific_settings":{"gecko":{"id":"'$addoneid'","strict_min_version":"42.0"}}'
          sed -i "s/$oldstr/$newstr/g" $filePath

          cd dist/
          echo $KEY_PEM > ./key.pem
          zip -r -FS plugin.zip *
        env:
          KEY_PEM: ${{ env.KEY_PEM }}
          APPID: ${{ env.FIREFOX_APPID }}
      - uses: actions/upload-artifact@v3
        with:
          name: plugin.zip
          path: ./dist/plugin.zip
  publish-github-artifact:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: plugin.zip
          path: ./dist
      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/plugin.zip
          asset_name: ${{github.event.repository.name}}_firefox.zip
          asset_content_type: application/zip
  publish-firefox-store:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: plugin.zip
          path: ./dist
      - name: Publish to firefox store
        uses: wdzeng/firefox-addon@v1
        with:
          addon-guid: ${{ env.FIREFOX_APPID }}
          jwt-issuer: ${{ env.FIREFOX_CLIENT_ID }}
          jwt-secret: ${{ env.FIREFOX_CLIENT_SECRET }}
          xpi-path: ./dist/plugin.zip
          self-hosted: ${{ github.event.inputs.use_publish != 'false' }}
